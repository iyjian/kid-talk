<html>
  <head>
    <title>Chat</title>
  </head>
  <body>

    {{!-- <button id="startRecord">录音开始</button>
    <button id="stopRecord">录音结束</button> --}}
    <p id="conversation">

    </p>
    <input id="text"/><button id="btn">发送</button>
  </body>
</html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.1/socket.io.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/RecordRTC/5.5.4/RecordRTC.js"></script>

<script>
const session = 'test'
const socket = io('http://localhost:3000');

document.querySelector('#btn').addEventListener('click', () => {
  socket.emit('chat', { content: document.querySelector('#text').value, session }, result => {
    const {text, audio} = result
    document.querySelector('#conversation').value += text + '</br>'
    if (audio) {
      playAudio(audio)
    }
  });
})

function playAudio(data) {
  const blob=new Blob([data], {type : 'audio/ogg'});
  const blobUrl = URL.createObjectURL(blob);
  const audio = new Audio(blobUrl);
  audio.play();
}

function convertDataURIToBinary(base64) {
  var raw = window.atob(base64);
  var rawLength = raw.length;
  var array = new Uint8Array(new ArrayBuffer(rawLength));

  for(i = 0; i < rawLength; i++) {
    array[i] = raw.charCodeAt(i);
  }
  return array;
}

let stream
let recorder

async function initUserMedia () {
  stream = await navigator.mediaDevices.getUserMedia({
    audio: true
  })

  recorder = RecordRTC(stream, {
    type: 'audio',
    mimeType: 'audio/wav',
    timeSlice: 1000,
    sampleRate: 16000,
    numberOfAudioChannels: 1,
    ondataavailable: function(blob) {},
  });
}

initUserMedia()

/*
document.querySelector('#startRecord').addEventListener('click', () => {
  recorder.startRecording();
})

document.querySelector('#stopRecord').addEventListener('click', () => {
      recorder.stopRecording(function() {
        let blob = recorder.getBlob();
        blob.arrayBuffer().then(buffer => {
          socket.emit('speech2text', buffer, result => {
            console.log(result)
            if (result && result.result && result.result.length > 0) {
              document.querySelector('#conversation').value += result.result[0] + '</br>'
            }
          })
        })
    });
})
*/

</script>
